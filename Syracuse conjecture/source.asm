; implementing syracuse conjecture with pic18f452 assembly language
; USING INDIRECT ADDRESSING MODE TO STORE THE RESULT STARTING AT ADDRESS 0x00A


; MATHEMATICAL EQUATION IS : 
; ODD ? 3x+1			THIS CAN BE ACHIEVED BY USING SHIFT LEFT ONE BIT AND THEN ADDING RESULT + x TO x
; EVEN ? x/2			THIS CAN BE ACHIEVED BY SHIFTING RIGHT ONE BIT
				#include <p18f452.inc>
				CONFIG	WDT = OFF
				LIST	P = 18F452
				RADIX 	HEX
REGISTER		EQU		0x000
TEMP			EQU		0x001
				ORG		0x00000
				MOVLW	D'13'
				MOVWF	TEMP,0			; LOAD TEMP & REGISTER WITH D'13'
				MOVWF	REGISTER,0	
				LFSR	0, 0x00A		; LOAD FSR0 WITH 0x00A STARTING ADDRESS OF STORAGE
REPEAT
				CALL	CHECK_EVEN_ODD
HOME
				MOVF	REGISTER,W,0	; ALWAYS UPDATE TEMP WITH THE CURRENT VALUE OF REGISTER
				MOVWF	TEMP,0
				MOVWF	INDF0,0			; STORE REGISTER VALUE TO THE ADDRESS THAT FSR0 POINTS TO
				MOVF	REGISTER,W
				XORLW	0x01			; CHECK IF REGISTER IS 0x01
				BZ		FINISH			; ENDS
				INCF	FSR0L,F,0		; INCREMENT FSR0L TO STORE NEXT DATA IN THE NEXT ADDRESS
				BRA		REPEAT			; REPEAT PROCESS UNTIL REGISTER BECOME 0x01
CHECK_EVEN_ODD			
				BTFSS	REGISTER,0		; EVEN -> BIT(0) IS ALWAYS 0; ODD -> BIT(0) IS ALWAYS 1
				BRA		EVEN_NUMBER		
				RLCF	REGISTER,F,0	; MULTIPLY BY TWO
				BCF		STATUS,C		; CLEAR CARRY
				MOVF	REGISTER,W,0
				ADDWF	TEMP,W,0		; ADD RESULT OF MULTIPLICATION WITH TEMP(PREVIOUS VALUE OF REGISTER BEFORE MULTIPLY)
				ADDLW	0x01			; ADD ONE	
				MOVWF	REGISTER,0		; STORE IT BACK TO REGISTER
				BRA		HOME			; RETURN HOME
EVEN_NUMBER
				RRCF	REGISTER,F,0	; DIVIDE BY TWO
				BCF		STATUS,C,0		; CLEAR CARRY 
				BRA 	HOME			; RETURN HOME
FINISH
				END