; AND ASM CODE FOR TRANSFERING DATA STORED IN THE PROGRAM MEMORY TO A BLOCK OF DATA MEMORY LOCATIONS 
; USING INDIRECT ADDRESSING MODE AND INDEXED ROM(TABLE READ)
; THIS CODE IS FOR PIC18F452 USING ASSEMBLY LANGUAGE 
				#include <p18f452.inc>
				CONFIG	WDT = OFF
				LIST	P = 18F452
				RADIX	HEX
				ORG		0x00100
NUMBERS			DB		1, 2, 3, 4, 5, 6, 7,8 , 9, '\0'	; DIRECTIVE TO STORE DATA INTO PROGRAM MEMORY
				ORG		0x00000	
				LFSR	0, 0x000						; LOAD FSR0 WITH THE ADRESS 0x000
				MOVLW	0x00		
				MOVWF	TBLPTRL							; TBLPTR IS A POINTER TO PROGRAM MEMORY ADDRESS 0x00100
				MOVLW	0x01
				MOVWF	TBLPTRH
				GOTO	TRANSFER
TRANSFER	
				TBLRD*									; TRANSFER THE CONTENT OF THE ADDRESS THAT TBLPTR POINTS TO INTO TABLAT REG
				MOVF	TABLAT,W
				XORLW	'\0'							; CHECK IF TBLPTR RECHEAS THE END
				BZ		ENDS			
				MOVF	TABLAT,W						; IF NO, LOAD THE ADDRESS THAT FSR0 POINTS BY THE CONTENE OF THE ADDRESS THAT TBLPTR POINTS TO
				MOVWF	INDF0,0			
				INCF	FSR0L,F,0						
				INCF	TBLPTRL,F,0						; INCREMENT TBLPTR AND FSR0
				GOTO	TRANSFER						; REPEAT PROCESS
ENDS
				END